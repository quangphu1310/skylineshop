@model SkyLineShop.Models.Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/AdminLayout.cshtml";
}
<div id="page-wrapper">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <h1 class="page-header">Quản lý sản phẩm</h1>
            </div>
            <!-- /.col-lg-12 -->
        </div>
        <!-- /.row -->
        <div class="row">
            <div class="col-lg-12">
                @using (Html.BeginForm("Edit","Products",FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Chỉnh sửa sản phẩm</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.id_product)

                <div class="form-group">
                    @Html.LabelFor(model => model.product_name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.product_name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.product_name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })*@
                        <input type="text" value="@Model.price" name="price" class="form-control"/>
                        @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.desc, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.desc, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.desc, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <label class="control-label col-md-2">Ảnh</label>
                    <div class="col-md-10">
                        @*@{ int index = 1; }
        @foreach (var i in Model.Product_Image)
        {
            string name = "img" + index;
            <img id="img-@index" src="@Url.Content("~/Assets/img/product/" + @i.image)" style="height:200px; width:200px; margin:10px;" />
            <input type="file" name="@name" class="form-control" onchange="updateImage(@index)" required />
            index++;
        }*@
                        <img id="img-1" src="@Url.Content("~/Assets/img/product/" + @ViewBag.image1)" style="height:200px; width:200px; margin:10px;" />
                        <input type="file" name="name1" class="form-control" onchange="updateImage(this, 1)"  />

                        <img id="img-2" src="@Url.Content("~/Assets/img/product/" + @ViewBag.image2)" style="height:200px; width:200px; margin:10px;" />
                        <input type="file" name="name2" class="form-control" onchange="updateImage(this, 2)" />

                        <img id="img-3" src="@Url.Content("~/Assets/img/product/" + @ViewBag.image3)" style="height:200px; width:200px; margin:10px;" />
                        <input type="file" name="name3" class="form-control" onchange="updateImage(this, 3)"  />

                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.id_cate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("id_cate", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.desc, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.id_brand, "id_brand", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("id_brand", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.id_brand, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
                }

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    function updateImage(fileInput, index) {
        var img = document.querySelector("#img-" + index);
        if (fileInput.files && fileInput.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                img.src = e.target.result;
            };
            reader.readAsDataURL(fileInput.files[0]);
        }
    }
</script>